#Pipeline for Deploying infrastructure

trigger:
- none 

variables:
  workspace: '$(Build.SourcesDirectory)'

pool:
  pool: default #You can select the agent for running the pipeline 

stages:
- stage: Provision
  displayName: 'Deploy the infra'
  jobs:
  - job: Provision
    displayName: 'provisioning infra'
    variables:
    - group: TerraformEnvVars
    steps: # After create an infra it will give a kubeconfig file. Moving this file to default kubeconfig directory. You will be able to acces cluster by 'kubectl' commands
    - script: |
        set -e
        terraform init
        terraform apply -input=false -auto-approve
        mv config ~/.kube/
      workingDirectory: $(Build.SourcesDirectory)/terraform-azure-aks/
      name: 'RunTerraform'
      displayName: 'Run Terraform' 
      env: # Azure Resource Manager variables will provide a management layer that enables you to create, update, and delete resources 
        ARM_CLIENT_ID: $(ARM_CLIENT_ID)
        ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)
        ARM_TENANT_ID: $(ARM_TENANT_ID)
        ARM_SUBSCRIPTION_ID: $(ARM_SUBSCRIPTION_ID)  
    

    
