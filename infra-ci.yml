# CI Pipeline for terraform infra code. You can get detailed info about the plan validate the changes before create resources

trigger:
- test  # It will trigger automatically whenever you push an update to the spesified branch.

variables:
  workspace: '$(Build.SourcesDirectory)'

pool:
  pool: default

stages:
- stage: Validate
  displayName: 'Ci for infra code'
  jobs:
  - job: Validate
    displayName: 'Validating infra code'
    variables:
    - group: TerraformEnvVars
    steps:
    - script: |
        set -e
        terraform init -input=false
        terraform validate
        terraform plan -input=false
      workingDirectory: $(Build.SourcesDirectory)/terraform-azure-aks/
      name: 'RunTerraform'
      displayName: 'Run Terraform'
      env: # Azure Resource Manager variables will provide a management layer that enables you to create, update, and delete resources 
        ARM_CLIENT_ID: $(ARM_CLIENT_ID)
        ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)
        ARM_TENANT_ID: $(ARM_TENANT_ID)
        ARM_SUBSCRIPTION_ID: $(ARM_SUBSCRIPTION_ID)  
